

SET(QT_LIBS ${QT_LIBRARIES})
LIST(REMOVE_ITEM QT_LIBS  "optimized" )
LIST(REMOVE_ITEM QT_LIBS  "debug" )
FOREACH(next_ITEM ${QT_LIBS})
    STRING(REPLACE ".lib" ".dll"  QTLIB_  ${next_ITEM} )
    STRING(REPLACE "/lib/" "/bin/" QTLIB   ${QTLIB_} )
    LIST(APPEND QT_LIBS_TO_INSTALL ${QTLIB})
ENDFOREACH()

INSTALL(FILES ${QT_LIBS_TO_INSTALL} DESTINATION bin)

set(CPACK_PACKAGE_NAME "gdbase")
set(CPACK_PACKAGE_VENDOR "GfifDev S.A.S")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Falta")
set(CPACK_PACKAGE_VERSION "0.2.1")
set(CPACK_PACKAGE_VERSION_MAJOR "0")
set(CPACK_PACKAGE_VERSION_MINOR "2")
set(CPACK_PACKAGE_VERSION_PATCH "1")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "GfifDev")

MACRO(GDINSTALL_H DIR)
  FOREACH(VAL ${ARGN})
    IF(${CMAKE_HOST_SYSTEM} MATCHES "Linux")
      INSTALL(FILES ${VAL} DESTINATION /usr/include/${DIR} )
    ELSEIF(${CMAKE_HOST_SYSTEM} MATCHES "Windows")
      INSTALL(FILES ${VAL} DESTINATION include/${DIR} )
    ENDIF()
  ENDFOREACH(VAL)
ENDMACRO(GDINSTALL_H)