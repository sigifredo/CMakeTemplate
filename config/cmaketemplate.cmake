find_package(Git)

set(CMAKETEMPLATE_VERSION 0x020000)
set(CMAKETEMPLATE_VERSION_MAJOR 2)
set(CMAKETEMPLATE_VERSION_MINOR 0)
set(CMAKETEMPLATE_VERSION_REVISION 0)

# the commit's SHA1, and whether the building workspace was dirty or not
execute_process(COMMAND
    "${GIT_EXECUTABLE}" describe --match=NeVeRmAtCh --always --dirty
    WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
    OUTPUT_VARIABLE GIT_SHA1
    ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)

# the date of the commit
execute_process(COMMAND
    "${GIT_EXECUTABLE}" log -1 --format=%ad
    WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
    OUTPUT_VARIABLE GIT_DATE
    ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)

set(CMAKETEMPLATE_VERSION_FULL ${CMAKETEMPLATE_VERSION_MAJOR}.${CMAKETEMPLATE_VERSION_MINOR}.${CMAKETEMPLATE_VERSION_REVISION}-${GIT_SHA1})
set(CMAKETEMPLATE_VERSION_STR \"${CMAKETEMPLATE_VERSION_FULL})

if (USE_OPENCV)
    set(CMAKETEMPLATE_VERSION_STR ${CMAKETEMPLATE_VERSION_STR}cv-alpha\")
    add_definitions( -DUSE_OPENCV )
else()
    set(CMAKETEMPLATE_VERSION_STR ${CMAKETEMPLATE_VERSION_STR}-alpha\")
endif(USE_OPENCV)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

set(CMAKE_CXX_STANDARD 14)

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g")
set(CMAKE_BUILD_TYPE Debug)
add_definitions( -Wall -Wextra -O3 -DCMAKETEMPLATE_VERSION=${CMAKETEMPLATE_VERSION} -DCMAKETEMPLATE_VERSION_STR=${CMAKETEMPLATE_VERSION_STR} -DCMAKETEMPLATE_VERSION_DATE=\"${GIT_DATE}\" )
